Inputs: in, sel[2];
Outputs: out1, out2, out3, out4;

//  0 -> out1, 1 -> out2, 2 -> out3, 3 -> out4

// =>
// out1 == not (sel1 AND sel2) AND in
// out2 == not s1 and s2 and in
// out3 == s1 and not s2 and in
// out4 == s1 and s2 and in

// 1. specify the components you want to use here
Parts: 
  n0 NOT, a0 OR, a1 AND,
  n1 NOT, a2 AND, a3 AND,
  a4 AND, n2 NOT, a5 AND,
  a6 AND, a7 AND;
// 2. wire them up
Wires: 
  // out1
  sel[1] -> a0.in1, sel[2] -> a0.in2, a0.out -> n0.in,
  n0.out -> a1.in1, in -> a1.in2, a1.out -> out1,
  // out2 1, 01, out = 0 ??
  sel[1] -> n1.in, n1.out -> a2.in1,
  sel[2] -> a2.in2,
  a2.out -> a3.in1, in -> a3.in2,
  a3.out -> out3,
  // out3
  sel[1] -> a4.in1,
  sel[2] -> n2.in, n2.out -> a4.in2,
  a4.out -> a5.in1, in -> a5.in2,
  a5.out -> out2,
  // out4
  sel[1] -> a6.in1, sel[2] -> a6.in2,
  a6.out -> a7.in1, in -> a7.in2,
  a7.out -> out4;
